{"version":3,"sources":["../../js/Enemy.js"],"names":[],"mappings":";;;;;;;;;;IAAM,KAAK;cAAL,KAAK;;AAEI,aAFT,KAAK,CAEK,IAAI,EAAE;;;8BAFhB,KAAK;;AAGH,mCAHF,KAAK,6CAGG,IAAI,EAAE;;AAEZ,YAAI,CAAC,IAAI,GAAG,OAAO,CAAC;;;AAGpB,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;AAElB,YAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;;AAE3C,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;;AAGtB,YAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,YAAY,CAAC,EAAC,QAAQ,EAAE,GAAG,EAAC,CAAC,CAAC;AAC1D,UAAE,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;;AAE5B,YAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;AAClE,YAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;;;AAGlD,YAAI,CAAC,UAAU,GAAG,KAAK,CAAC;;;AAGxB,YAAI,CAAC,QAAQ,EAAE,CAAC,oBAAoB,CAAC,YAAM;AACvC,gBAAI,MAAK,UAAU,EAAE;;AAEjB,sBAAK,IAAI,EAAE,CAAC;aACf;SACJ,CAAC,CAAC;KACN;;iBA/BC,KAAK;;;;;;eAoDF,gBAAG;AACJ,gBAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC;SAC3B;;;eAEI,iBAAG;AACJ,kCAAoB,IAAI,CAAC,UAAU,CAAE;SACxC;;;aAzBY,aAAC,GAAG,EAAE;AACf,gBAAI,CAAC,UAAU,GAAG,GAAG,CAAC;AACtB,gBAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;SAC3B;;;;;aAGO,eAAG;AACP,mBAAO,IAAI,CAAC,KAAK,CAAC;SACrB;;;aAGO,aAAC,IAAI,EAAE;AACX,gBAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,gBAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACpD;;;WA/CC,KAAK;GAAS,UAAU","file":"Enemy.js","sourcesContent":["class Enemy extends GameObject{\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.name = \"enemy\";\r\n\r\n        // An enemy belongs to a line (picked random at the start)\r\n        this._line = null;\r\n\r\n        this.position = new BABYLON.Vector3(0,0,0);\r\n\r\n        this.isVisible = true;\r\n\r\n        // An enemy is a simple sphere\r\n        let vd = BABYLON.VertexData.CreateSphere({diameter: 0.5});\r\n        vd.applyToMesh(this, false);\r\n\r\n        this.material = new BABYLON.StandardMaterial(\"\", this.getScene());\r\n        this.material.diffuseColor = BABYLON.Color3.Red();\r\n\r\n        // True if this enemy walks along the line\r\n        this._isWalking = false;\r\n\r\n        // Game loop : enemy walks, get bullets and diiiiie\r\n        this.getScene().registerBeforeRender(() => {\r\n            if (this._isWalking) {\r\n                // Increase the enemy position in -x\r\n                this.move();\r\n            }\r\n        });\r\n    }\r\n\r\n    set isWalking(val) {\r\n        this._isWalking = val;\r\n        this._line.isHot = true;\r\n    }\r\n\r\n    // Returns the line attached to this enemy\r\n    get line() {\r\n        return this._line;\r\n    }\r\n\r\n    // Set the line attached to this enemy, and update its z position accordingly\r\n    set line(line) {\r\n        this._line = line;\r\n        this.position.z = this._line.cells[0].position.z;\r\n    }\r\n\r\n    /**\r\n     * Move this enemy during a tick\r\n     */\r\n    move () {\r\n        this.position.x -= 0.01;\r\n    }\r\n\r\n    debug() {\r\n        return `walking : ${this._isWalking}`\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}"]}