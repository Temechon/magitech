{"version":3,"sources":["../../js/Tower.js"],"names":[],"mappings":";;;;;;;;;;IAAM,KAAK;cAAL,KAAK;;AAEI,aAFT,KAAK,CAEK,IAAI,EAAE;;;8BAFhB,KAAK;;AAGH,mCAHF,KAAK,6CAGG,IAAI,EAAE;;AAEZ,YAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;;AAEvC,YAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;;AAGtB,YAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;;AAGlB,YAAI,CAAC,WAAW,GAAG,KAAK,CAAC;;;AAGzB,YAAI,CAAC,YAAY,GAAG,GAAG,CAAC;;;AAGxB,YAAI,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAC,MAAM,EAAC,CAAC,CAAC,EAAE,SAAS,EAAC,IAAI,EAAC,CAAC,CAAC;AAC1E,YAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,YAAM;AACxB,kBAAK,KAAK,EAAE,CAAC;SAChB,CAAC;;;AAGF,YAAI,EAAE,GAAG,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,EAAC,KAAK,EAAC,CAAC,EAAE,MAAM,EAAC,CAAC,EAAE,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC;AACpE,UAAE,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAG/B;;;;;;;iBA7BC,KAAK;;eAmCF,iBAAG;AACJ,uCAAyB,IAAI,CAAC,WAAW,CAAE;SAC9C;;;;;;;;;;;;eAmBS,sBAAG;AACT,gBAAI,IAAI,CAAC,KAAK,EAAE;AACZ,oBAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;aAC3B;AACD,gBAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;;AAGlB,gBAAI,CAAC,WAAW,GAAG,KAAK,CAAC;SAC5B;;;;;;;eAKK,iBAAG;AACL,gBAAI,IAAI,CAAC,WAAW,EAAE;AAClB,oBAAI,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;AAChC,mBAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AACV,oBAAI,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;aAC9B;SACJ;;;aAhCO,aAAC,IAAI,EAAE;AACX,gBAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,gBAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC;;;AAGxB,gBAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE;AACvB,oBAAI,CAAC,WAAW,GAAG,IAAI,CAAC;aAC3B;SACJ;;;WAnDC,KAAK;GAAS,UAAU","file":"Tower.js","sourcesContent":["class Tower extends GameObject{\r\n\r\n    constructor(game) {\r\n        super(game);\r\n\r\n        this.position = BABYLON.Vector3.Zero();\r\n\r\n        this.isVisible = true;\r\n\r\n        // The current cell of the tower. Null at start because the tower is not placed\r\n        this._cell = null;\r\n\r\n        // True if the tower start to shoot, false otherwise\r\n        this.isActivated = false;\r\n\r\n        // This tower will shoot every xx ms\r\n        this.shootCadency = 500;\r\n\r\n        // Timer repeat indefinitely, each 500ms\r\n        this.timer = new Timer(500, this.getScene(), {repeat:-1, autostart:true});\r\n        this.timer.callback = () => {\r\n            this.shoot();\r\n        };\r\n\r\n        // A cell is a squared plane\r\n        var vd = BABYLON.VertexData.CreateBox({width:1, height:2, depth:1});\r\n        vd.applyToMesh(this, false);\r\n\r\n\r\n    }\r\n\r\n    /**\r\n     * Display debug information on the screen\r\n     * @returns {string}\r\n     */\r\n    debug() {\r\n        return `is activated : ${this.isActivated}`\r\n    }\r\n\r\n    /**\r\n     * Link the given cell to this tower\r\n     * @param cell\r\n     */\r\n    set cell(cell) {\r\n        this._cell = cell;\r\n        this._cell.tower = this;\r\n\r\n        // If the corresponding line is hot, activate this tower\r\n        if (this._cell.line.isHot) {\r\n            this.isActivated = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unlink the cell from this tower\r\n     */\r\n    unlinkCell() {\r\n        if (this._cell) {\r\n            this._cell.tower = null;\r\n        }\r\n        this._cell = null;\r\n\r\n        // deactivate tower\r\n        this.isActivated = false;\r\n    }\r\n\r\n    /**\r\n     * Fire a bullet if there is at least one enemy in sight\r\n     */\r\n    shoot () {\r\n        if (this.isActivated) {\r\n            let pos = this.position.clone();\r\n            pos.y = 1;\r\n            new Bullet(this.game, pos);\r\n        }\r\n    }\r\n\r\n}"]}