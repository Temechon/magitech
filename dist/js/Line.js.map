{"version":3,"sources":["../../js/Line.js"],"names":[],"mappings":";;;;;;IAAM,IAAI;AACK,aADT,IAAI,CACM,IAAI,EAAE,MAAM,EAAmC;YAAjC,QAAQ,yDAAC,OAAO,CAAC,OAAO,CAAC,IAAI,EAAE;;8BADvD,IAAI;;AAEF,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;;AAEjB,YAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,YAAI,CAAC,KAAK,GAAG,EAAE,CAAC;;;AAGhB,YAAI,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;;;AAG1B,YAAI,CAAC,MAAM,GAAG,KAAK,CAAC;;AAEpB,aAAK,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;;AAE9B,gBAAI,CAAC,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAClC,aAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;;AAE9B,aAAC,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;;AAE3B,gBAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACtB;KACJ;;;;;;iBAtBC,IAAI;;eA2BE,oBAAG;AACP,mBAAO,sCAAsC,CAAC,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE;AACxE,oBAAI,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAC;oBAAE,CAAC,GAAG,CAAC,KAAK,GAAG,GAAG,CAAC,GAAI,CAAC,GAAG,GAAG,GAAG,GAAG,AAAC,CAAC;AACpE,uBAAO,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;aACzB,CAAC,CAAC;SACN;;;;;;;aAKQ,aAAC,GAAG,EAAE;AACX,gBAAI,CAAC,MAAM,GAAG,GAAG,CAAC;;;;;;AAClB,qCAAc,IAAI,CAAC,KAAK,8HAAE;wBAAjB,CAAC;;AACN,wBAAI,CAAC,CAAC,KAAK,EAAC;AACR,yBAAC,CAAC,KAAK,CAAC,WAAW,GAAG,GAAG,CAAC;qBAC7B;iBACJ;;;;;;;;;;;;;;;SACJ;aAEQ,eAAG;AACR,mBAAO,IAAI,CAAC,MAAM,CAAC;SACtB;;;WAhDC,IAAI","file":"Line.js","sourcesContent":["class Line {\r\n    constructor(game, length, position=BABYLON.Vector3.Zero()) {\r\n        this.game = game;\r\n\r\n        this.length = length;\r\n        this.cells = [];\r\n\r\n        // Unique ID\r\n        this.id = this.uniqueId();\r\n\r\n        // A line is hot when an enemy is attached to this line\r\n        this._isHot = false;\r\n\r\n        for (let i=0; i<this.length; i++) {\r\n            // Create new cell\r\n            let c = new Cell(this.game, this);\r\n            c.position.copyFrom(position);\r\n\r\n            c.position.x += c.size * i;\r\n\r\n            this.cells.push(c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Generates a unique ID for this line\r\n     */\r\n    uniqueId() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0, v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Set a line as hot activates all the tower on this line\r\n     */\r\n    set isHot(val) {\r\n        this._isHot = val;\r\n        for (let c of this.cells) {\r\n            if (c.tower){\r\n                c.tower.isActivated = val;\r\n            }\r\n        }\r\n    }\r\n\r\n    get isHot() {\r\n        return this._isHot;\r\n    }\r\n}"]}