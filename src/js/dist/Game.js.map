{"version":3,"sources":["../dev/Game.js"],"names":[],"mappings":";;;;;;AAAA,IAAI,OAAO,GAAG,GAAG;IACb,MAAM,GAAG,wBAAwB;;;AAAC,AAGtC,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;AACnD,QAAI,IAAI,CAAC,YAAY,CAAC,CAAC;CAC1B,CAAC,CAAC;;IAGG,IAAI;AACN,aADE,IAAI,CACM,QAAQ,EAAE;;;8BADpB,IAAI;;AAGF,YAAI,MAAM,GAAY,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;AACxD,YAAI,CAAC,MAAM,GAAW,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC;;;AAAC,AAGvD,YAAI,CAAC,MAAM,GAAI,EAAE;;;AAAC,AAGlB,YAAI,CAAC,KAAK,GAAK,IAAI;;;AAAC,AAGpB,cAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAM;AACpC,kBAAK,MAAM,CAAC,MAAM,EAAE,CAAC;SACxB,CAAC,CAAC;AACH,YAAI,CAAC,GAAG,EAAE,CAAC;KAEd;;iBAlBC,IAAI;;qCAmBO;;AAET,gBAAI,KAAK,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC;;AAAC,AAE3C,gBAAI,MAAM,GAAE,IAAI,OAAO,CAAC,UAAU,CAAC,KAAK,EAAE,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;AAClF,kBAAM,CAAC,SAAS,CAAC,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC;AAC7C,kBAAM,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;;;AAAC,AAGvD,gBAAI,CAAC,GAAG,IAAI,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAChF,aAAC,CAAC,SAAS,GAAG,GAAG,CAAC;AAClB,mBAAO,KAAK,CAAC;SAChB;;;8BAEK;;;AAEF,gBAAI,CAAC,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE;;;AAAC,AAG/B,gBAAI,MAAM,GAAI,IAAI,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;;;;;AAAC,AAKpD,kBAAM,CAAC,QAAQ,GAAG,YAAM;;;AAGpB,uBAAK,SAAS,EAAE;;;AAAC,AAGjB,uBAAK,OAAO,GAAG,IAAI,CAAC;;AAEpB,uBAAK,MAAM,CAAC,aAAa,CAAC,YAAM;AAC5B,2BAAK,KAAK,CAAC,MAAM,EAAE,CAAC;iBACvB,CAAC,CAAC;aACN,CAAC;;AAEF,kBAAM,CAAC,IAAI,EAAE,CAAC;SACjB;;;oCAEW;AACR,mBAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC/C,gBAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAChC;;;WA9DC,IAAI","file":"Game.js","sourcesContent":["var VERSION = 1.0,\r\n    AUTHOR = \"temechon@pixelcodr.com\";\r\n\r\n// The function onload is loaded when the DOM has been loaded\r\nwindow.addEventListener(\"DOMContentLoaded\", function() {\r\n    new Game('gamecanvas');\r\n});\r\n\r\n\r\nclass Game {\r\n    constructor(canvasId) {\r\n\r\n        let canvas          = document.getElementById(canvasId);\r\n        this.engine         = new BABYLON.Engine(canvas, true);\r\n\r\n        // Contains all loaded assets needed for this state\r\n        this.assets  = [];\r\n\r\n        // The state scene\r\n        this.scene   = null;\r\n\r\n        // Resize window event\r\n        window.addEventListener(\"resize\", () => {\r\n            this.engine.resize();\r\n        });\r\n        this.run();\r\n\r\n    }\r\n    _initScene() {\r\n\r\n        let scene = new BABYLON.Scene(this.engine);\r\n        // Camera attached to the canvas\r\n        let camera= new BABYLON.FreeCamera(\"cam\", new BABYLON.Vector3(0, 30, -30), scene);\r\n        camera.setTarget(new BABYLON.Vector3(0,0,0));\r\n        camera.attachControl(this.engine.getRenderingCanvas());\r\n\r\n        // Hemispheric light to light the scene\r\n        let h = new BABYLON.HemisphericLight(\"hemi\", new BABYLON.Vector3(0,1,0), scene);\r\n        h.intensity = 0.9;\r\n        return scene;\r\n    }\r\n\r\n    run() {\r\n\r\n        this.scene = this._initScene();\r\n\r\n        // The loader\r\n        let loader =  new BABYLON.AssetsManager(this.scene);\r\n\r\n        //    var meshTask = this.loader.addMeshTask(\"skull task\", \"\", \"./assets/\", \"block02.babylon\");\r\n        //    meshTask.onSuccess = this._initMesh;\r\n\r\n        loader.onFinish = () => {\r\n\r\n            // Init the game\r\n            this._initGame();\r\n\r\n            // The state is ready to be played\r\n            this.isReady = true;\r\n\r\n            this.engine.runRenderLoop(() => {\r\n                this.scene.render();\r\n            });\r\n        };\r\n\r\n        loader.load();\r\n    }\r\n\r\n    _initGame() {\r\n        BABYLON.Mesh.CreateBox(\"box\", 2.0, this.scene);\r\n        this.scene.debugLayer.show();\r\n    }\r\n\r\n}"]}